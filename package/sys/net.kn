func [d0004.knd, _init] _init()
end func

func [d0004.knd] _fin()
end func

+class TcpServer()
	*func [d0004.knd, _tcpServerDtor, _force] _dtor()
	end func

	+func [d0004.knd, _tcpServerFin] fin()
	end func

	+func [d0004.knd, _tcpServerGet, _make_instance] get(me2: @Tcp): @Tcp
	end func

	var socket: int
	var threadExit: int
	var connectTop: int
	var connectBottom: int
	var mutex: int
	var threadHandle: int
end class

+func [d0004.knd, _makeTcpServer, _make_instance] makeTcpServer(me2: @TcpServer, port: int): @TcpServer
end func

+class Tcp()
	*func [d0004.knd, _tcpDtor, _force] _dtor()
	end func

	+func [d0004.knd, _tcpFin] fin()
	end func

	+func [d0004.knd, _tcpSend] send(data: []bit8)
	end func

	+func [d0004.knd, _tcpReceive] receive(size: int): []bit8
	end func

	+func [d0004.knd, _tcpConnecting] connecting(): bool
	end func

	var socket: int
	var threadExit: int
	var data: int
	var dataTopBottom: int
	var mutex: int
	var threadHandle: int
end class

+func [d0004.knd, _makeTcpClient, _make_instance] makeTcpClient(me2: @Tcp, host: []char, port: int): @Tcp
end func

+class Http()
	*func [d0004.knd, _httpDtor, _force] _dtor()
	end func

	+func [d0004.knd, _httpFin] fin()
	end func

	+func [d0004.knd, _httpGet] get(): []char
	end func

	var handleOpen: int
	var handleCorrect: int
	var handleRequest: int
	var threadExit: int
	var totalSize: int
	var dataTop: int
	var dataBottom: int
	var mutex: int
	var threadHandle: int
end class

+func [d0004.knd, _makeHttp, _make_instance] makeHttp(me2: @Http, url: []char, post: bool, agent: []char): @Http
end func
