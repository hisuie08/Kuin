func [d1003.knd, _init] _init()
end func

+class Xml()
	*func [d1003.knd, _xmlDtor, _force] _dtor()
	end func

	+func [d1003.knd, _xmlSave] save(path: []char, compact: bool): bool
	end func

	+func [d1003.knd, _xmlRoot, _make_instance] root(me2: @Node): @Node
	end func

	var tree: int
end class

+func [d1003.knd, _makeXml, _make_instance] makeXml(me2: @Xml, path: []char): @Xml
end func

+func [d1003.knd, _makeXmlEmpty, _make_instance] makeXmlEmpty(me2: @Xml): @Xml
end func

+class Node()
	+*func cmp(t: @Node): int
		var a: int :: me.root $ bool ?(0, me.node)
		var b: int :: t.root $ bool ?(0, t.node)
		ret a - b
	end func

	*func [d1003.knd, _xmlNodeDtor, _force] _dtor()
	end func

	+func [d1003.knd, _xmlNodeSetName] setName(name: []char)
	end func

	+func [d1003.knd, _xmlNodeGetName] getName(): []char
	end func

	+func [d1003.knd, _xmlNodeSetValue] setValue(value: []char)
	end func

	+func [d1003.knd, _xmlNodeGetValue] getValue(): []char
	end func

	+func [d1003.knd, _xmlNodeFirstChild, _make_instance] firstChild(me2: @Node): @Node
	end func

	+func [d1003.knd, _xmlNodeLastChild, _make_instance] lastChild(me2: @Node): @Node
	end func

	+func [d1003.knd, _xmlNodeNext, _make_instance] next(me2: @Node): @Node
	end func

	+func [d1003.knd, _xmlNodePrev, _make_instance] prev(me2: @Node): @Node
	end func

	+func [d1003.knd, _xmlNodeParent, _make_instance] parent(me2: @Node): @Node
	end func

	+func [d1003.knd, _xmlNodeFindNext, _make_instance] findNext(me2: @Node, name: []char): @Node
	end func

	+func [d1003.knd, _xmlNodeFindPrev, _make_instance] findPrev(me2: @Node, name: []char): @Node
	end func

	+func [d1003.knd, _xmlNodeFindChild, _make_instance] findChild(me2: @Node, name: []char): @Node
	end func

	+func [d1003.knd, _xmlNodeFindChildLast, _make_instance] findChildLast(me2: @Node, name: []char): @Node
	end func

	+func [d1003.knd, _xmlNodeAddChild, _make_instance] addChild(me2: @Node, name: []char): @Node
	end func

	+func [d1003.knd, _xmlNodeInsChild, _make_instance] insChild(me2: @Node, node: @Node, name: []char): @Node
	end func

	+func [d1003.knd, _xmlNodeDelChild] delChild(node: @Node)
	end func

	+func [d1003.knd, _xmlNodeSetAttr] setAttr(attrName: []char, attrValue: []char)
	end func

	+func [d1003.knd, _xmlNodeGetAttr] getAttr(attrName: []char): []char
	end func

	+var root: int
	+var node: int
end class
